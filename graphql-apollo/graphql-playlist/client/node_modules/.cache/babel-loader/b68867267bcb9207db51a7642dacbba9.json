{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\graphql-playlist\\\\client\\\\src\\\\App.js\";\nimport './App.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport GetAuthors from './Components/GetAuthors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n\n  if (graphqlErrors) {\n    graphqlErrors.map((message, location, path) => {\n      console.log(`GraphQL Error : ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:4000/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [\" \", /*#__PURE__*/_jsxDEV(GetAuthors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","GetAuthors","errorLink","graphqlErrors","networkError","map","message","location","path","console","log","link","uri","client","cache","App"],"sources":["C:/projects/graphql-playlist/client/src/App.js"],"sourcesContent":["import './App.css';\nimport {ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport GetAuthors from './Components/GetAuthors';\n\nconst errorLink = onError(({ graphqlErrors, networkError}) => {\n  if(graphqlErrors){\n    graphqlErrors.map((message, location, path) => {\n      console.log(`GraphQL Error : ${message}`);\n    })\n  }\n})\n\nconst link = from([\n  errorLink,\n  new HttpLink({uri: \"http://localhost:4000/graphql\"})\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {\" \"}\n      <GetAuthors />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,SAAQA,YAAR,EAAsBC,aAAtB,EAAqCC,cAArC,EAAqDC,QAArD,EAA+DC,IAA/D,QAA0E,gBAA1E;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,SAAS,GAAGF,OAAO,CAAC,QAAoC;EAAA,IAAnC;IAAEG,aAAF;IAAiBC;EAAjB,CAAmC;;EAC5D,IAAGD,aAAH,EAAiB;IACfA,aAAa,CAACE,GAAd,CAAkB,CAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,KAA6B;MAC7CC,OAAO,CAACC,GAAR,CAAa,mBAAkBJ,OAAQ,EAAvC;IACD,CAFD;EAGD;AACF,CANwB,CAAzB;AAQA,MAAMK,IAAI,GAAGZ,IAAI,CAAC,CAChBG,SADgB,EAEhB,IAAIJ,QAAJ,CAAa;EAACc,GAAG,EAAE;AAAN,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;EAC9BmB,KAAK,EAAE,IAAIlB,aAAJ,EADuB;EAE9Be,IAAI,EAAEA;AAFwB,CAAjB,CAAf;;AAMA,SAASI,GAAT,GAAe;EACb,oBACE,QAAC,cAAD;IAAgB,MAAM,EAAEF,MAAxB;IAAA,WACG,GADH,eAEE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAPQE,G;AAST,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}